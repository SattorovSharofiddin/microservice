version: '3.8'

services:
  django:
    build: ./django_project/
    container_name: django
    command: > 
       sh -c "sleep 7 && python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    expose:
      - 8000
    ports:
      - "8000:8000"
    env_file:
      - ./django_project/.env
    depends_on:
      - postgres_db

  postgres_db:
    image: postgres:alpine3.17
    container_name: postgres_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=1
    ports:
      - "5433:5432"

  mysql:
    restart: always
    image: mysql
    container_name: mysql_db
    environment:
      - MYSQL_DATABASE=mysql
      - MYSQL_PASSWORD=1
      - MYSQL_ROOT_PASSWORD=1
    ports:
      - "3307:3306"

  mongodb:
    image: mongo:5.0.2
    restart: unless-stopped
#    command: mongod --auth
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=root
#      - MONGO_INITDB_ROOT_PASSWORD=aSLJqN22pBluITGH
#      - MONGO_INITDB_DATABASE=testdb
    ports:
      - "7017:27017"
#    volumes:
#      -  ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  express:
    build: ./js_project
    restart: unless-stopped
    hostname: express_js
    ports:
      - "3000:8080"
    environment:
      - DB_HOST=mongodb
      - DB_USER=root
      - DB_PASSWORD=aSLJqN22pBluITGH
      - DB_NAME=testdb
      - DB_PORT=27017
    stdin_open: true
    tty: true
    depends_on:
      - mongodb

  golang:
    hostname: golang
    build: ./golang_project/
    container_name: golang
    ports:
      - "8080:8080"
    depends_on:
      - mysql
